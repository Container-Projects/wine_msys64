#!/usr/bin/env bash

set -eu

useradd -m -u "${USER_ID}" user
# A copy is faster than a chown, due to how snapshots work. At least this is
# true on brtfs

# Handle docker often make a volume owned by root by default
chown user:user /home/.user_wine
# Link the dir in instead of mounting, cause then useradd won't populate skel
ln -s /home/.user_wine /home/user/.wine



# This would add about 6 seconds to start time
if [ ! -d "/home/user/.wine/drive_c" ]; then
  echo "Initializing .wine directory..."
  (
    shopt -s dotglob;
    gosu user cp -ra /home/wine/* /home/user/.wine/
  )
  echo "Done!"
else
  if [ "$(stat -c %U /home/user/.wine/drive_c)" != "user" ]; then
    echo "The wine directory does not appear to be owned by you."
    echo "Either you changed user_id or you need to remove the wine volume"
    echo "Unpredictable behavior may occur"
  fi
fi

if [ -n "${DISPLAY:+set}" ] && [ -d /tmp/.X11-unix ]; then
  # Start wine
  gosu user wine 'C:\msys64\usr\bin\mintty.exe' /usr/bin/bash --login "${@}"

  # Wait for it to end
  gosu user wineserver --wait
else
  # I have to run wineconsole once, and THEN it WORKS?!
  gosu user wineconsole cmd /c :

  gosu user wineconsole 'C:\msys64\usr\bin\bash.exe' --login ${@+"${@}"}
fi